#ifndef __LUADBGSTRUCT_H_
#define __LUADBGSTRUCT_H_

#include <dbgeng.h>

extern struct lua_State;

typedef void (*LUA_STRUCT_FUNC)(lua_State *, void *);

void NewArrayTable(lua_State *L, LUA_STRUCT_FUNC func, void *p, int n, int cell);

void BREAKPOINT_PARAMETERS2Table(lua_State *L, DEBUG_BREAKPOINT_PARAMETERS *st);
void Table2BREAKPOINT_PARAMETERS(lua_State *L, DEBUG_BREAKPOINT_PARAMETERS *st);
void CREATE_PROCESS_OPTIONS2Table(lua_State *L, DEBUG_CREATE_PROCESS_OPTIONS *st);
void Table2CREATE_PROCESS_OPTIONS(lua_State *L, DEBUG_CREATE_PROCESS_OPTIONS *st);
void EXCEPTION_FILTER_PARAMETERS2Table(lua_State *L, DEBUG_EXCEPTION_FILTER_PARAMETERS *st);
void Table2EXCEPTION_FILTER_PARAMETERS(lua_State *L, DEBUG_EXCEPTION_FILTER_PARAMETERS *st);
void HANDLE_DATA_BASIC2Table(lua_State *L, DEBUG_HANDLE_DATA_BASIC *st);
void Table2HANDLE_DATA_BASIC(lua_State *L, DEBUG_HANDLE_DATA_BASIC *st);
void MODULE_AND_ID2Table(lua_State *L, DEBUG_MODULE_AND_ID *st);
void Table2MODULE_AND_ID(lua_State *L, DEBUG_MODULE_AND_ID *st);
void MODULE_PARAMETERS2Table(lua_State *L, DEBUG_MODULE_PARAMETERS *st);
void Table2MODULE_PARAMETERS(lua_State *L, DEBUG_MODULE_PARAMETERS *st);
void REGISTER_DESCRIPTION2Table(lua_State *L, DEBUG_REGISTER_DESCRIPTION *st);
void Table2REGISTER_DESCRIPTION(lua_State *L, DEBUG_REGISTER_DESCRIPTION *st);
void SPECIFIC_FILTER_PARAMETERS2Table(lua_State *L, DEBUG_SPECIFIC_FILTER_PARAMETERS *st);
void Table2SPECIFIC_FILTER_PARAMETERS(lua_State *L, DEBUG_SPECIFIC_FILTER_PARAMETERS *st);
void STACK_FRAME2Table(lua_State *L, DEBUG_STACK_FRAME *st);
void Table2STACK_FRAME(lua_State *L, DEBUG_STACK_FRAME *st);
void SYMBOL_ENTRY2Table(lua_State *L, DEBUG_SYMBOL_ENTRY *st);
void Table2SYMBOL_ENTRY(lua_State *L, DEBUG_SYMBOL_ENTRY *st);
void SYMBOL_PARAMETERS2Table(lua_State *L, DEBUG_SYMBOL_PARAMETERS *st);
void Table2SYMBOL_PARAMETERS(lua_State *L, DEBUG_SYMBOL_PARAMETERS *st);
void SYMBOL_SOURCE_ENTRY2Table(lua_State *L, DEBUG_SYMBOL_SOURCE_ENTRY *st);
void Table2SYMBOL_SOURCE_ENTRY(lua_State *L, DEBUG_SYMBOL_SOURCE_ENTRY *st);
void THREAD_BASIC_INFORMATION2Table(lua_State *L, DEBUG_THREAD_BASIC_INFORMATION *st);
void Table2THREAD_BASIC_INFORMATION(lua_State *L, DEBUG_THREAD_BASIC_INFORMATION *st);
void VALUE2Table(lua_State *L, DEBUG_VALUE *st);
void Table2VALUE(lua_State *L, DEBUG_VALUE *st);

#endif
